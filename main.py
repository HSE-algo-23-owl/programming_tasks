def get_win_sequence(input_string: str) -> str:
    """Вычисляет минимальную лексикографическую подпоследовательность строки,
    получаемую из исходной строки путем отбрасывания некоторого числа символов
    с начала.

    :param input_string: Параметры текстом. В первой строке целое число, длина
    исходной строки, во второй строке последовательность из заглавных латинских
    букв длинной не менее, заданной первым параметром.
    :return: Строку, представляющую минимальную лексикографическую
    подпоследовательность исходной строки.
    """
    pass


def get_water_volume(input_string: str) -> int:
    """Вычисляет объем воды (количество блоков), который остается после дождя
    на острове.

    :param input_string: Параметры текстом. В первой строке целое число,
    количество столбцов, представляющих ландшафт острова, во второй строке
    список целых чисел, высоты столбцов.
    :return: Целое число, представляющее объем воды (в блоках), который
    останется после дождя.
    """
    pass


def main():
    print(get_water_volume('11\n2 5 2 3 6 9 3 1 3 4 6'))  # 18

    print(get_win_sequence('4\nMAMA'))  # A
    print(get_win_sequence('4\nALLOALLO'))  # ALLO
    print(get_win_sequence('6\nABCOAXLO'))  # ABCOAX


if __name__ == '__main__':
    main()
